/*
 * ARC.c
 *
 *  Created on: Nov 13, 2022
 *      Author: hcwon
 */

#include "main.h"

#include "can.h"
#include "dma.h"
#include "gpio.h"
#include "i2c.h"
#include "spi.h"
#include "tim.h"
#include "usart.h"

#include "camera/camera.h"
#include "lcd/lcd.h"
#include "lcd/lcd_graphics.h"


#define FORWARD 0
#define BACKWARD 1

#define LEFT 0
#define RIGHT 1

int main(void) {
	HAL_Init();
	SystemClock_Config();

	//define pins to use
	MX_GPIO_Init();

	MX_TIM5_Init(); 

	MX_TIM10_Init();
	MX_TIM11_Init();

	MX_USART2_UART_Init();

	// Init camera
	camera_GPIO_init();
	//cam_set_colormode(CamColorMode c);
	//cam_set_frameSize(CamFrameSize f);
	//cam_set_brightness(int8_t brightness);
	//cam_set_contrast(int8_t contrast);
	//cam_set_framerate(CamFrameRate rate);
	
	tft_prints(0, 0, "Initing camera");
	tft_update(0);
	if (camera_init() == CAM_NOT_INITED || camera_init() == CAM_INIT_ERROR) {
		tft_prints(0, 0, "No OV7725 module");
	} else {
		tft_prints(0, 0, "Inited");
		cam_set_state(CAM_CAPTURING);
	}
	tft_update(0);
	cam_set_window(0, 0, QQVGA_120x160);
	cam_set_framerate(CAM_75FPS);
	
	
	can_init();
	while (1) {
		if (tft_update(10) == 0) {
				tft_prints(0,0,"m1_spd: %d", motor1_stat.speed_rpm);
				tft_prints(0,1,"m1_temp: %d", motor1_stat.temperature);
				tft_prints(0,2,"m1_cur: %d", motor1_stat.given_current);
			}
		/* USER CODE END WHILE */
		HAL_CAN_RxFifo0MsgPendingCallback(&hcan1);
		UpdateMotorStatus();
		/* USER CODE BEGIN 3 */
		// goto tutorial2_hw.c to do your classwork and homework
			CAN_cmd_motor(1000, 1000, 1000, 1000,&hcan1); 
		// led blinky - useful for indicating the condition of the board
    	}
}
